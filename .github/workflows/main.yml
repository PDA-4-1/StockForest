name: serverCICD

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Build the project
      run: npm run build --if-present
      working-directory: ./server


    - name: Log in to Docker Hub
      env:
        DOCKER_USER: ${{ secrets.DOCKER_ID }}
        DOCKER_PASS: ${{ secrets.DOCKER_PW }}
      run: echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin

    - name: Build Docker image
      run: |
        TIMESTAMP=$(date +%Y%m%d%H%M%S)
        IMAGE_NAME=yoon97/stockforest:$TIMESTAMP
        docker build -t $IMAGE_NAME ./server
        echo $IMAGE_NAME > image_name.txt

    - name: Push Docker image to Docker Hub
      run: |
        IMAGE_NAME=$(cat image_name.txt)
        docker push $IMAGE_NAME
        

    - name: Setup SSH and Add Known Hosts
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PEM_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: Deploy to EC2
      env:
        EC2_USER: ${{ secrets.EC2_USER }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        DOCKER_USER: ${{ secrets.DOCKER_USER }}
        DOCKER_PASS: ${{ secrets.DOCKER_PASS }}
      run: |
        IMAGE_NAME=$(cat image_name.txt)
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $EC2_USER@$EC2_HOST << EOF
          echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
          docker pull $IMAGE_NAME
          docker stop my_container || true
          docker rm my_container || true
          docker run -d --name my_container -p 80:80 $IMAGE_NAME
        EOF
